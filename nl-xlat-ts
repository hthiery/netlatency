#!/usr/bin/env python2
# -*- coding: utf-8 -*-

# Copyright (c) 2018, Kontron Europe GmbH
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#
# 1. Redistributions of source code must retain the above copyright notice,
#    this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright notice,
#    this list of conditions and the following disclaimer in the documentation
#    and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
# LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.

from __future__ import print_function

import json
import numpy
import sys


def main(args=None):
    for line in sys.stdin:
        line = line.strip()
        if not line:
            continue

        try:
            j = json.loads(line)
        except ValueError as e:
            print(e, file=sys.stderr)
            pass

        try:
            if j['type'] == 'rx-packet':
                val = j['object']['timestamps']['values']
                val = map(lambda v: int(numpy.datetime64(v)), val)
                val = map(lambda v: v % 4000000000, val)
                j['object']['timestamps']['values'] = val
                json.dump(j, sys.stdout)
                print()
                sys.stdout.flush()
            else:
                print(line, file=sys.stdout)
                sys.stdout.flush()
        except KeyError as e:
            print(e, file=sys.stderr)
            pass

if __name__ == '__main__':
    main()
